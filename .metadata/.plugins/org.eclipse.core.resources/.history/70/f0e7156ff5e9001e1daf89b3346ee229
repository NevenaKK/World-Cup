package com.jwd.test.web.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.jwd.test.model.Utakmica;
import com.jwd.test.model.Zadatak;
import com.jwd.test.service.UtakmicaService;
import com.jwd.test.support.UtakmicaDtoToUtakmica;
import com.jwd.test.support.UtakmicaToUtakmicaDto;
import com.jwd.test.web.dto.UtakmicaDTO;
import com.jwd.test.web.dto.ZadatakDTO;



@RestController
@RequestMapping(value = "/api/utakmice", produces = MediaType.APPLICATION_JSON_VALUE)

public class UtakmicaController {
	
	@Autowired
	UtakmicaService utakmicaService;
	
	@Autowired
	UtakmicaDtoToUtakmica toUtakmica;
	
	@Autowired
	UtakmicaToUtakmicaDto toUtakmicaDto;
	
	@GetMapping
    public ResponseEntity<List<UtakmicaDTO>> getAll(
    		 @RequestParam(required=false) Long repA,
             @RequestParam(required=false) Long repB,
    		 @RequestParam(value = "pageNo", defaultValue = "0") Integer pageNo){
    		
	 Page<Utakmica> utakmice=utakmicaService.search(repA, repB, pageNo);
	 
	 HttpHeaders headers = new HttpHeaders();
     headers.add("Total-Pages", Integer.toString(utakmice.getTotalPages()));
     
     return new ResponseEntity<>(toUtakmicaDto.convert(utakmice.getContent()),headers,HttpStatus.OK);
    	
        
    }
	
	@GetMapping("/{id}") 
	 public ResponseEntity<UtakmicaDTO> getOne(@PathVariable Long id){
		 
		 Utakmica utakmica=utakmicaService.findOne(id);
		 
		 if(utakmica != null) 
	            return new ResponseEntity<>(toUtakmicaDto.convert(utakmica), HttpStatus.OK);
	        else 
	            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
	        

	 }
 

}
